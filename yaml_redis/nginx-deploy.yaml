apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-index
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: index
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: index
    spec:
      affinity:
        podAntiAffinity: 
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nginx
                  operator: In
                  values:
                  - nginx
              topologyKey: topology.kubernetes.io/zone
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: nginx
      containers:
      - image: 992382512430.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-index:v5.0
        name: index
        command: ["nginx", "-g", "daemon off;"]
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 200m
            memory: 250Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-login
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: login
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: login
    spec:
      affinity:
        podAntiAffinity: 
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nginx
                  operator: In
                  values:
                  - nginx
              topologyKey: topology.kubernetes.io/zone
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: nginx
      containers:
      - image: 992382512430.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-login:v5.0
        name: login
        command: ["nginx", "-g", "daemon off;"]
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 200m
            memory: 250Mi
        livenessProbe:
          httpGet:
            path: /login.jsp
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3    
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-join
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: join
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: join
    spec:
      affinity:
        podAntiAffinity: 
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nginx
                  operator: In
                  values:
                  - nginx
              topologyKey: topology.kubernetes.io/zone
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: nginx
      containers:
      - image: 992382512430.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-join:v5.0
        name: join
        command: ["nginx", "-g", "daemon off;"]
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 200m
            memory: 250Mi
        livenessProbe:
          httpGet:
            path: /join.jsp
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-contents
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: contents
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: contents
    spec:
      affinity:
        podAntiAffinity: 
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nginx
                  operator: In
                  values:
                  - nginx
              topologyKey: topology.kubernetes.io/zone
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: nginx
      containers:
      - image: 992382512430.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-contents:v5.0
        name: contents
        command: ["nginx", "-g", "daemon off;"]
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 200m
            memory: 250Mi
        livenessProbe:
          httpGet:
            path: /contents.jsp
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3    
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-mypage
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: mypage
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: mypage
    spec:
      affinity:
        podAntiAffinity: 
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nginx
                  operator: In
                  values:
                  - nginx
              topologyKey: topology.kubernetes.io/zone
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: nginx
      containers:
      - image: 992382512430.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-mypage:v5.0
        name: mypage
        command: ["nginx", "-g", "daemon off;"]
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 200m
            memory: 250Mi
        livenessProbe:
          httpGet:
            path: /mypage.jsp
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx
