apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-index
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: index
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: index
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - tomcat
              - key: name
                operator: In
                values:
                - index
            topologyKey: "kubernetes.io/hostname"
            namespaces:
            - tomcat
        podAntiAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - index  
            topologyKey: "kubernetes.io/hostname"
                       
      containers:
      - image: 381492042252.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-index:v2.0
        name: index
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 200m
            memory: 250Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-login
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: login
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: login
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - tomcat
              - key: name
                operator: In
                values:
                - login
            topologyKey: "kubernetes.io/hostname"
            namespaces:
            - tomcat
        podAntiAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - login  
            topologyKey: "kubernetes.io/hostname"
                       
      containers:
      - image: 381492042252.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-login:v2.0
        name: login
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 100m
            memory: 150Mi
        livenessProbe:
          httpGet:
            path: /login.jsp
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-join
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: join
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: join
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - tomcat
              - key: name
                operator: In
                values:
                - join
            topologyKey: "kubernetes.io/hostname"
            namespaces:
            - tomcat
        podAntiAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - join  
            topologyKey: "kubernetes.io/hostname"
            
      containers:
      - image: 381492042252.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-join:v2.0
        name: join
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 100m
            memory: 150Mi
        livenessProbe:
          httpGet:
            path: /join.jsp
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-contents
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: contents
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: contents
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - tomcat
              - key: name
                operator: In
                values:
                - contents
            topologyKey: "kubernetes.io/hostname"
            namespaces:
            - tomcat
        podAntiAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - contents  
            topologyKey: "kubernetes.io/hostname"            
      containers:
      - image: 381492042252.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-contents:v2.0
        name: contents
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 200m
            memory: 250Mi
        livenessProbe:
          httpGet:
            path: /contents.jsp
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-mypage
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: mypage
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: mypage
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - tomcat
              - key: name
                operator: In
                values:
                - mypage
            topologyKey: "kubernetes.io/hostname"
            namespaces:
            - tomcat
        podAntiAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - mypage  
            topologyKey: "kubernetes.io/hostname"                                 
      containers:
      - image: 381492042252.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-mypage:v2.0
        name: mypage
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: 200m
            memory: 250Mi
          requests:
            cpu: 100m
            memory: 150Mi
        livenessProbe:
          httpGet:
            path: /mypage.jsp
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx
